---
import { graphql } from '~/lib/datocms/graphql';
import { executeQuery } from '~/lib/datocms/executeQuery';
import { getCurrentLocale, getFallbackLocale, isValidLocale } from '~/lib/i18n';
import Layout from '~/layouts/Layout.astro';

export async function getStaticPaths() {
  const locales = await import('~/lib/i18n').then((m) => m.default());
  return locales.map((locale: string) => ({
    params: { locale },
  }));
}

// Get and validate current locale
const { locale } = Astro.params;
const defaultLocale = await getFallbackLocale();

// Validate locale is provided
if (!locale) {
  return Astro.redirect('/en/p/');
}

// Validate the locale
const isValid = await isValidLocale(locale);
if (!isValid) {
  return new Response(null, {
    status: 404,
    statusText: 'Locale not found',
  });
}

// Query for pages
const query = graphql(/* GraphQL */ `
  query AllPages($locale: SiteLocale = en) {
    allPages(locale: $locale) {
      id
      title
      slug
    }
    _allPagesMeta(locale: $locale) {
      count
    }
  }
`);

let allPages = [];
let totalEntries = 0;

try {
  const result = await executeQuery(query, {
    includeDrafts: false,
    variables: { locale },
  });
  allPages = result.allPages || [];
  totalEntries = result._allPagesMeta?.count || 0;
} catch (error) {
  console.warn('No pages found or error fetching pages:', error);
}
---

<Layout>
  <div class="hero bg-base-200 mb-8">
    <div class="hero-content text-center">
      <div class="max-w-md">
        <h1 class="text-5xl font-bold">Collection</h1>
        <p class="py-6">
          A statically generated blog example with news, tutorials, resources and other interesting
          content
        </p>
        <h2 class="text-2xl">Published items: {totalEntries}</h2>
      </div>
    </div>
  </div>

  {
    allPages.length > 0 ? (
      <div class="container mx-auto px-4">
        <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
          {allPages.map((page: any) => (
            <article class="card bg-base-100 shadow-xl">
              <div class="card-body">
                <h3 class="card-title">
                  <a
                    href={`/${locale}/collection/${page.slug}`}
                    class="hover:text-primary transition-colors"
                  >
                    {page.title}
                  </a>
                </h3>
                <p class="text-gray-600">Slug: {page.slug}</p>
                <p class="text-sm text-gray-500">ID: {page.id}</p>
              </div>
            </article>
          ))}
        </div>
      </div>
    ) : (
      <div class="container mx-auto px-4 text-center">
        <p class="text-gray-600">No pages found.</p>
      </div>
    )
  }
</Layout>
