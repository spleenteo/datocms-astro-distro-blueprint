---
import { graphql } from '~/lib/datocms/graphql';
import { executeQuery } from '~/lib/datocms/executeQuery';
import { getCurrentLocale, getFallbackLocale, isValidLocale } from '~/lib/i18n';
import Layout from '~/layouts/Layout.astro';

// Get and validate current locale
const { locale } = Astro.params;
const defaultLocale = await getFallbackLocale();

// Check if locale is valid, return 404 if not
if (locale && !await isValidLocale(locale)) {
  return Astro.redirect('/404');
}

// Use validated locale for GraphQL query
const validLocale = locale || defaultLocale;

// Query for pages
const query = graphql(/* GraphQL */ `
  query AllPagesQl($locale: SiteLocale!) {
    allPages(filter: {_locales: {allIn: [$locale]}}) {
      id
      title
      slug
    }
    _allPagesMeta(filter: {_locales: {allIn: [$locale]}}) {
      count
    }
  }
`);

const { allPages, _allPagesMeta } = await executeQuery(query, {
  includeDrafts: false,
  variables: { locale: validLocale },
});
const totalEntries = _allPagesMeta.count || 0;

---

<Layout>
  <div class="hero bg-base-200 mb-8">
    <div class="hero-content text-center">
      <div class="max-w-md">
        <h1 class="text-5xl font-bold">Collection</h1>
        <p class="py-6">
          A statically generated blog example with news, tutorials, resources and other interesting
          content
        </p>
        <h2 class="text-2xl">Published items: {totalEntries}</h2>
      </div>
    </div>
  </div>

  {
    allPages.length > 0 ? (
      <div class="container mx-auto px-4">
        <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
          {allPages.map((page) => (
            <article class="card bg-base-100 shadow-xl">
              <div class="card-body">
                <h3 class="card-title">
                  <a
                    href={`/${Astro.params.locale}/collection/${page.slug}`}
                    class="hover:text-primary transition-colors"
                  >
                    {page.title}
                  </a>
                </h3>
                <p class="text-gray-600">Slug: {page.slug}</p>
                <p class="text-sm text-gray-500">ID: {page.id}</p>
              </div>
            </article>
          ))}
        </div>
      </div>
    ) : (
      <div class="container mx-auto px-4 text-center">
        <p class="text-2xl text-gray-600 mt-8">I feel lonely here</p>
      </div>
    )
  }
</Layout>
