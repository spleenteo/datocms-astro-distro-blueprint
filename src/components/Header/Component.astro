---
import { getLocaleFromUrl } from '~/lib/i18n';
import { getNavigationData } from '~/lib/navigation';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
  links?: Array<Link>;
}

function trimSlash(path: string) {
  return path.replace(/^\/+|\/+$/g, '');
}

const { links: propsLinks } = Astro.props;

// Get current locale from URL for navigation
const currentLocale = await getLocaleFromUrl(Astro.url);

// const currentLocale = await getLocaleFromUrl(Astro.url);
const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;

// Get available locales for mobile menu
const availableLocales = await import('~/lib/i18n').then((m) => m.default());
const navigationData = await getNavigationData(currentLocale);

const links = navigationData.links.length > 0 ? navigationData.links : propsLinks || [];
---

<div class="navbar bg-base-100 shadow-sm">
  <div class="navbar-start">
    <div class="dropdown">
      <div tabindex="0" role="button" class="btn btn-ghost lg:hidden">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-5 w-5"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h8m-8 6h16"></path>
        </svg>
      </div>
      <ul
        tabindex="0"
        class="menu menu-sm dropdown-content bg-base-100 rounded-box z-[1] mt-3 w-52 p-2 shadow"
      >
        {
          links.map(({ text, href, links: subLinks }: any) => (
            <li>
              {subLinks?.length ? (
                <>
                  <a>{text}</a>
                  <ul class="p-2">
                    {subLinks.map(({ text: subText, href: subHref }: any) => (
                      <li>
                        <a href={subHref}>{subText}</a>
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a href={href} class={href === currentPath ? 'active' : ''}>
                  {text}
                </a>
              )}
            </li>
          ))
        }
        <li>
          <div class="px-2 py-2">
            <div class="text-xs font-medium mb-2 opacity-60">Language</div>
            <div class="flex flex-wrap gap-1">
              {
                availableLocales.map((locale: string) => (
                  <a
                    href={Astro.url.pathname
                      .replace(`/${currentLocale}/`, `/${locale}/`)
                      .replace(`/${currentLocale}`, `/${locale}`)}
                    class={`btn btn-xs ${locale === currentLocale ? 'btn-primary' : 'btn-ghost'}`}
                  >
                    {locale.toUpperCase()}
                  </a>
                ))
              }
            </div>
          </div>
        </li>
      </ul>
    </div>
    <a class="btn btn-ghost text-xl">Logo {currentLocale}</a>
  </div>
  <div class="navbar-center hidden lg:flex">
    <ul class="menu menu-horizontal px-1">
      {
        links.map(({ text, href, links: subLinks }: any) => (
          <li>
            {subLinks?.length ? (
              <details>
                <summary>{text}</summary>
                <ul class="p-2 bg-base-100 rounded-box shadow">
                  {subLinks.map(({ text: subText, href: subHref }: any) => (
                    <li>
                      <a href={subHref} class={subHref === currentPath ? 'active' : ''}>
                        {subText}
                      </a>
                    </li>
                  ))}
                </ul>
              </details>
            ) : (
              <a href={href} class={href === currentPath ? 'active' : ''}>
                {text}
              </a>
            )}
          </li>
        ))
      }
    </ul>
  </div>
  <div class="navbar-end">
    <div class="dropdown dropdown-end">
      <div tabindex="0" role="button" class="btn btn-sm btn-ghost">
        {currentLocale.toUpperCase()}
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-4 w-4"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"
          ></path>
        </svg>
      </div>
      <ul tabindex="0" class="dropdown-content z-[1] menu p-2 shadow bg-base-100 rounded-box w-32">
        {
          availableLocales.map((locale: string) => (
            <li>
              <a href={`/${locale}/`} class={locale === currentLocale ? 'active' : ''}>
                {locale.toUpperCase()}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</div>
